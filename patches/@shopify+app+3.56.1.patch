diff --git a/node_modules/@shopify/app/dist/cli/services/build.js b/node_modules/@shopify/app/dist/cli/services/build.js
index d4a1a0c..6f0940c 100644
--- a/node_modules/@shopify/app/dist/cli/services/build.js
+++ b/node_modules/@shopify/app/dist/cli/services/build.js
@@ -2,7 +2,11 @@ import buildWeb from './web.js';
 import { installAppDependencies } from './dependencies.js';
 import { installJavy } from './function/build.js';
 import { renderConcurrent, renderSuccess } from '@shopify/cli-kit/node/ui';
+import { fetchAppAndIdentifiers } from './context.js';
+import { fetchPartnersSession } from './context/partner-account-info.js';
+import { ensureXpifyDev } from "@xpify/buildpack";
 async function build(options) {
+    const partnersSession = await fetchPartnersSession();
     if (!options.skipDependenciesInstallation && !options.app.usesWorkspaces) {
         await installAppDependencies(options.app);
     }
@@ -10,6 +14,14 @@ async function build(options) {
     if (options.apiKey) {
         env.SHOPIFY_API_KEY = options.apiKey;
     }
+
+    const [partnersApp] = await fetchAppAndIdentifiers(options, partnersSession);
+    // Force link the dev app to the partners app. in normally this is done by the --client-id flag on run command
+    if (!env.SHOPIFY_API_KEY) {
+        env.SHOPIFY_API_KEY = partnersApp.apiKey;
+    }
+    await ensureXpifyDev({ localApp: options.app, remoteApp: partnersApp  });
+
     // Force the download of the javy binary in advance to avoid later problems,
     // as it might be done multiple times in parallel. https://github.com/Shopify/cli/issues/2877
     await installJavy(options.app);
diff --git a/node_modules/@shopify/app/dist/cli/services/context.js b/node_modules/@shopify/app/dist/cli/services/context.js
index 08c6b68..4ea8904 100644
--- a/node_modules/@shopify/app/dist/cli/services/context.js
+++ b/node_modules/@shopify/app/dist/cli/services/context.js
@@ -24,6 +24,7 @@ import { getOrganization } from '@shopify/cli-kit/node/environment';
 import { basename, joinPath } from '@shopify/cli-kit/node/path';
 import { glob } from '@shopify/cli-kit/node/fs';
 import { partnersRequest } from '@shopify/cli-kit/node/api/partners';
+import { ensureXpifyDev } from "@xpify/buildpack";
 export const InvalidApiKeyErrorMessage = (apiKey) => {
     return {
         message: outputContent `Invalid Client ID: ${apiKey}`,
@@ -272,6 +273,7 @@ export async function ensureDeployContext(options) {
         reset: options.reset,
         force: options.force,
     });
+    await ensureXpifyDev({ localApp: app, remoteApp: partnersApp });
     const identifiers = await ensureDeploymentIdsPresence({
         app,
         appId: partnersApp.apiKey,
diff --git a/node_modules/@shopify/app/dist/cli/services/dev.js b/node_modules/@shopify/app/dist/cli/services/dev.js
index 517af89..9d53490 100644
--- a/node_modules/@shopify/app/dist/cli/services/dev.js
+++ b/node_modules/@shopify/app/dist/cli/services/dev.js
@@ -23,6 +23,7 @@ import { formatPackageManagerCommand, outputDebug } from '@shopify/cli-kit/node/
 import { hashString } from '@shopify/cli-kit/node/crypto';
 import { AbortError } from '@shopify/cli-kit/node/error';
 import { ensureAuthenticatedPartners } from '@shopify/cli-kit/node/session';
+import { ensureXpifyDev } from "@xpify/buildpack";
 export async function dev(commandOptions) {
     const config = await prepareForDev(commandOptions);
     await actionsBeforeSettingUpDevProcesses(config);
@@ -52,6 +53,7 @@ async function prepareForDev(commandOptions) {
         tunnelUrl: commandOptions.tunnelUrl,
     }, tunnelClient);
     localApp.webs = webs;
+    await ensureXpifyDev({ localApp, remoteApp });
     const partnerUrlsUpdated = await handleUpdatingOfPartnerUrls(webs, commandOptions.update, network, localApp, cachedUpdateURLs, remoteApp, apiKey, token);
     return {
         storeFqdn,
diff --git a/node_modules/@shopify/app/dist/cli/services/dev/urls.js b/node_modules/@shopify/app/dist/cli/services/dev/urls.js
index 5c51ea8..a21e78f 100644
--- a/node_modules/@shopify/app/dist/cli/services/dev/urls.js
+++ b/node_modules/@shopify/app/dist/cli/services/dev/urls.js
@@ -13,6 +13,7 @@ import { codespaceURL, codespacePortForwardingDomain, gitpodURL } from '@shopify
 import { fanoutHooks } from '@shopify/cli-kit/node/plugins';
 import { terminalSupportsRawMode } from '@shopify/cli-kit/node/system';
 import { outputDebug } from '@shopify/cli-kit/node/output';
+import { ensureXpifyRedirectUrlWhitelist } from '@xpify/buildpack';
 /**
  * The tunnel creation logic depends on 7 variables:
  * - If a Codespaces environment is deteced, then the URL is built using the codespaces hostname. No need for tunnel
@@ -122,6 +123,7 @@ export function generatePartnersURLs(baseURL, authCallbackPath, proxyFields) {
             },
         }
         : {};
+    redirectUrlWhitelist = ensureXpifyRedirectUrlWhitelist(redirectUrlWhitelist);
     return {
         applicationUrl: baseURL,
         redirectUrlWhitelist,
